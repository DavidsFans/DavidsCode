package assignment2;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import static javax.management.Query.lt;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 349414599
 */
public class DrawingArea extends javax.swing.JPanel {
Image img = Toolkit.getDefaultToolkit().getImage("12.JPG");
int x[];
int y[];
Color[]  colours= new Color[20];
int[] balls= new int[12];
int height = 40;
int width = 40;
int t =0;
int velocity =1;
int xdir[];
int ydir[];
int numBalls =1;
Random r = new Random();
    /**
     * Creates new form draw
     */
    public DrawingArea() {
        initComponents();
        x = new int[20];
        y= new int[20];
        xdir = new int[20];
        ydir = new int[20];
        for(int t=0;t<20;t++){   
        xdir[t] = r.nextInt(5)-2;
        ydir[t] = r.nextInt(5)-2;
        
        }
       
        Timer t1 = new Timer (1, new TimeListener());
        t1.start();
    }
    
    public void paintComponent( Graphics g){
        //redraw background
    super.paintComponent(g);
    g.drawImage(img, 0, 0, this);
      for(int t=0;t<numBalls;t++){ 
      g.setColor(colours[t]);
    g.fillOval(x[t], y[t], width, height);
      }
}
    //takes speed from slider 
    public void setSpeed(int newSpeed){
velocity = newSpeed;     
} 
    
 

public void move(){
    //boundaries
    for(int t = 0; t < numBalls; t++){  
     if (x[t]> 400 -width ){
      xdir[t] =-1;
      colours[t] = new Color(r.nextInt(256),r.nextInt(256),r.nextInt(256));
      
     }
      if (x[t]< 0 ){
      xdir[t] = 1; 
      colours[t] = new Color(r.nextInt(256),r.nextInt(256),r.nextInt(256));
     }
     if (y[t]> 300 -height ){
      ydir[t] = -1;
      colours[t] = new Color(r.nextInt(256),r.nextInt(256),r.nextInt(256));

     }
      if (y[t]< 0 ){
      ydir[t] = 1;  
      colours[t] = new Color(r.nextInt(256),r.nextInt(256),r.nextInt(256));
     }
     
     x[t] += xdir[t] *velocity;
     y[t] += ydir[t] * velocity;
    }
}
    
    
    
    

private class TimeListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {
            
            move();
            repaint();
        }
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
